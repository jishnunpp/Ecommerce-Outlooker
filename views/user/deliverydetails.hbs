<link rel="stylesheet" href="/styles/user/deliverydetails.css">

<main>

  {{!-- header section start --}}
  {{> userheader}}
  {{!-- header section end --}}


<div class="delivery-details section-padding">
   
        <div class="delivery-address">
          {{#each alladdress}}
            <div>
                <p>SAVED ADDRESS</p>
              <div class="address-box">
                <p>{{name}}</p>
                <p>{{housename}}</p>
                <p>{{streetaddress}},{{towncity}}</p>
                <p>pincode:{{pincode}}</p>
                <p>phone :{{phone}} </p>
                <div class="address-box-btn">
                  <a href="/address/{{this._id}}" style="all: unset;">  <button>choose</button></a>
                </div>
                
              </div>

            </div>
           {{/each}}
            
            <div class="delivery-address-btn">
               <a href="/address" style="all: unset;"><button>Add New Address</button></a>
            </div>
           
        </div>
        <div class="delivery-address-form">
            <form  class="address-form" id="checkoutForm" method="POST" action="/submit-order">
              <div class="delivery-form-section">

             
      <div class="input-feild">
      <label  class="input-title" for="login">Name</label><br>
      <input class="address-input-name" type="text" placeholder=" Name" name="name" id="name" value="{{address.name}}">
      <br>
           <span style="color:red" id="name_error" class="error"></span>
      </div>

       <div class="address-inputs">
         <div class="input-feild">
         <label  class="input-title" for="login">House Name</label><br>
         <input class="address-input" type="text" placeholder="HouseName" name="housename" id="housename" value="{{address.housename}}"><br>
           <span style="color:red" id="housename_error" class="error"></span>
         </div>
          <div class="input-feild">
          <label class="input-title" for="login">Street Address</label><br>
          <input  class="address-input" type="text" placeholder="Street Address" name="streetaddress" id="streetaddress" value="{{address.streetaddress}}">
          <br>
           <span style="color:red" id="streetaddress_error" class="error"></span>
         </div>
       </div>

        <div class="address-inputs">
          <div class="input-feild">
          <label  class="input-title" for="login">Town/City</label><br>
          <input class="address-input" type="text" placeholder="Town/City" name="towncity" id="towncity" value="{{address.towncity}}">
          <br>
           <span style="color:red" id="towncity_error" class="error"></span>
          </div>
          <div class="input-feild">
          <label class="input-title" for="login">Pincode</label><br>
          <input  class="address-input" type="number" placeholder="Pincode" name="pincode" id="pincode" value="{{address.pincode}}">
          <br>
           <span style="color:red" id="pincode_error" class="error"></span>
         </div>
       </div>

         <div class="address-inputs">
        
          <div class="input-feild">
          <label class="input-title" for="login">Phone</label><br>
          <input  class="address-input" type="number" placeholder="Phone" name="phone" id="phone" value="{{address.phone}}">
          <br>
           <span style="color:red" id="phone_error" class="error"></span>
         </div>
       </div>
      
     
     
      
              </div>
              <div class="delivery-payment-section">
        <div class="delivery-section-logo">
         <img src="/images/logo1.png" alt="logo" />
        </div>
        <div class="payment-form">
    <h4>Payment Method</h4>
   
        <label for="coupon">Enter your coupon code if you have one</label>
        <input type="text" id="coupon" placeholder="Enter coupon code here" class="coupon-code" name="coupon" >
         <div class="amount-section">
         <p style="font-weight: bold;">Total Amount: Rs.</p>
         <input type="number" style="width: 100px;" readonly id="amount"   name="amount" value="{{totalAmount}}">
         </div>
        

        <label for="cash-on-delivery" style=" font-size: 16px;font-weight: 700;">
            <input type="radio" id="cash-on-delivery" name="payment" value="cod" required> Cash On Delivery
        </label><br>

        <label for="online-payment" style=" font-size: 16px;font-weight: 700;">
            <input type="radio" id="online-payment" name="payment" value="online" required> Online Payment
        </label><br>

        <div class="payment-form-btn">
            <button  type="button" id="checkoutButton">Checkout</button>
        </div>
  
</div>


              </div>
      
           </form>
    


       

        </div>
    
</div>




  </main>








<script>
 

  document.getElementById("checkoutButton").addEventListener("click", function (e) {
    e.preventDefault();

    const selectedPaymentMethod = document.querySelector('input[name="payment"]:checked');
    const name = document.getElementById("name").value.trim();
    const houseName = document.getElementById("housename").value.trim();
    const streetAddress = document.getElementById("streetaddress").value.trim();
    const townCity = document.getElementById("towncity").value.trim();
    const pincode = document.getElementById("pincode").value.trim();
    const phone = document.getElementById("phone").value.trim();

   
    if (!name || !houseName || !streetAddress || !townCity || !pincode || !phone) {
      Swal.fire({
        title: "Missing Details",
        text: "Please fill in all address fields before placing an order.",
        icon: "warning",
        confirmButtonColor: "#3085d6",
        confirmButtonText: "OK",
      });
      return;
    }

  
    if (!selectedPaymentMethod) {
      Swal.fire({
        title: "Payment Method Required",
        text: "Please select a payment method to proceed.",
        icon: "warning",
        confirmButtonColor: "#3085d6",
        confirmButtonText: "OK",
      });
      return;
    }

 
    Swal.fire({
      title: "Confirm Your Order",
      text: "Are you sure you want to place this order?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Yes, place order!",
      cancelButtonText: "No, cancel",
    }).then((result) => {
      if (result.isConfirmed) {
        if (selectedPaymentMethod.value === "online") {
          initiatePayment();
        } else if (selectedPaymentMethod.value === "cod") {
          Swal.fire({
         title: 'Order Placed!',
         text: 'Your order has been placed successfully.',
         icon: 'success',
         timer: 4000, 
         showConfirmButton: false, 
          })
            setTimeout(() => {
            document.getElementById("checkoutForm").submit();
            }, 2000);
        }
      } else {
        Swal.fire("Cancelled", "Your order was not placed.", "error");
      }
    });
  });

const initiatePayment = async () => {
  try {
    const formData = $('#checkoutForm').serializeArray();
    const data = {};
    $.each(formData, function (i, field) {
      data[field.name] = field.value;
    });

    const response = await fetch('/submit-order', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(data),
    });

    const orderResponse = await response.json();

    if (!orderResponse.order || !orderResponse.order.id) {
      Swal.fire('Error', 'Order creation failed. Please try again.', 'error');
      return;
    }

    const options = {
      key: orderResponse.key_id,
      amount: orderResponse.amount,
      currency: orderResponse.currency,
      name: 'Outlooker',
      description: 'Order Payment',
      image: 'https://example.com/your-logo.png',
      order_id: orderResponse.order.id,
      handler: function (response) {
        console.log('Razorpay Response:', response);

        fetch('/verify-payment', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            razorpay_payment_id: response.razorpay_payment_id,
            razorpay_order_id: response.razorpay_order_id,
            razorpay_signature: response.razorpay_signature,
          }),
        })
          .then((res) => res.json())
          .then((result) => {
            if (result.success) {
              Swal.fire('Order Placed!', 'Payment verified successfully.', 'success').then(() => {
                window.location.href = '/orderhistory';
              });
            } else {
              Swal.fire('Verification Failed', 'Payment verification failed.', 'error');
            }
          })
          .catch((err) => {
            console.error('Verification error:', err);
            Swal.fire('Error', 'Something went wrong during payment verification.', 'error');
          });
      },
      prefill: {
        name: data.name || 'Customer Name',
        email: data.email || 'customer@example.com',
        contact: data.phone || '9999999999',
      },
      theme: {
        color: '#3399cc',
      },
    };

    const razorpay = new Razorpay(options);
    razorpay.open();
  } catch (error) {
    console.error('Payment initiation failed:', error);
    Swal.fire('Error', 'Failed to initiate payment. Please try again.', 'error');
  }
};
</script>



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
