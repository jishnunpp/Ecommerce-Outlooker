

<link rel="stylesheet" href="/styles/admin/addproduct.css">
<main>
    <section>
     {{!-- header section start --}}
  {{> adminheader}}
  {{!-- header section end --}}
  </section>
  {{!-- sign in page start --}}
  <section class="addproduct-section section-padding">
    <div class="addproduct-page">
      
       
        
      
    <div class="addproduct">
       <div class="addproduct-heading-section">
              <h3 class="addproduct-heading">Add Product</h3>
        </div>
    
    <form  class="addproduct-form"  action="/admin/addproduct" method="post" id="form" enctype="multipart/form-data">
      <div class="input-title-feild">
      <label  class="input-title" for="login">Title</label><br>
      <input class="addproduct-input-name" type="text" placeholder=" product title" name="title" id="title" ><br>
      <span style="color:red" id="title_error" class="error"></span>
      </div>
      <div class="input-title-feild">
      <label  class="input-title" for="login">Description</label><br>
      <input class="addproduct-input-name" type="text" placeholder=" product decription" name="description" id="description" ><br>
      <span style="color:red" id="description_error" class="error"></span>
      </div>

       <div class="addproduct-inputs">
         <div class="input-feild">
         <label  class="input-title" for="login">Catogory</label><br>
       
         <select id="Catogory"name="catogory" class="addproduct-input">
          
          {{#each category}}
           <option value="{{catogoryname}}" >{{catogoryname}}</option>
         {{/each}} 
        </select><br>
         <span style="color:red" id="catogory_error" class="error"></span>
         </div>
          <div class="input-feild">
          <label class="input-title" for="login">Price</label><br>
          <input  class="addproduct-input" type="number" placeholder=" product price" name="price" id="price"><br>
          <span style="color:red" id="price_error" class="error"></span>
         </div>
       </div>

        <div class="addproduct-inputs">
          <div class="input-feild">
          <label  class="input-title" for="login">Offer</label><br>
          <input class="addproduct-input" type="number" placeholder=" product offer" name="offer" id="offer" ><br>
          <span style="color:red" id="offer_error" class="error"></span>
          </div>
          <div class="input-feild">
          <label class="input-title" for="login">Rating</label><br>
          <input  class="addproduct-input" type="number" placeholder=" product rating" name="rating" id="rating" ><br>
          <span style="color:red" id="rating_error" class="error"></span>
         </div>
       </div>
       <div class="addproduct-inputs">
          <div class="input-feild">
          <label class="input-title" for="login">Review</label><br>
          <input  class="addproduct-input" type="number" placeholder=" Review" name="review" id="review" ><br>
          <span style="color:red" id="review_error" class="error"></span>
         </div>
         <div class="input-feild">
          <label class="input-title" for="login">Stock</label><br>
          <input  class="addproduct-input" type="number" placeholder=" Stock" name="stock" id="stock" ><br>
          <span style="color:red" id="stock_error" class="error"></span>
         </div>
       </div>
        <div class="addproduct-inputs">
          <div class="input-feild">
          <label  class="input-title" for="login">Size</label><br>
          <input class="addproduct-input" type="text" placeholder=" product size" name="size" id="size" ><br>
          <span style="color:red" id="size_error" class="error"></span>
          </div>
          <div class="input-feild">
          <label class="input-title" for="login">Meterial</label><br>
          <input  class="addproduct-input" type="text" placeholder=" product meterial" name="meterial" id="meterial" ><br>
          <span style="color:red" id="meterial_error" class="error"></span>
         </div>
       </div>

      
    <div class="addproduct-inputs">
    <div class="input-feild">
     <label class="input-title" for="login">Main Image</label><br>
      <label for="image1" class="custom-file-label">Choose File</label>
     <span class="file-name" id="fileName1">No file chosen</span>
     <input type="file" id="image1" name="image1" accept="image/*"><br>
     <div id="mainImageWrapper" style="margin-top: 10px; ">
        <img id="mainImagePreview" src="" alt="Main Image Preview" style="width:80px;height:100px; display: none;">
        <button id="removeMainImage" style="display: none;width:80px;border:none; padding:5px 10px; ">Remove</button>
     </div>
     <span style="color:red" id="image1_error" class="error"></span>
    </div>
    
    <div class="input-feild">
        <label class="input-title" for="images">Upload Sub Images</label><br>
        <label for="images" class="custom-file-label">Choose Files</label>
        <span class="file-name" id="fileNames">No files chosen</span>
        <input type="file" id="images" name="images" accept="image/*" multiple><br>
        <div id="previewContainer" style="margin-top: 10px; display: flex; gap: 10px; flex-wrap: wrap;"></div>
        <span style="color:red" id="images_error" class="error"></span>
    </div>
   </div>





       
     
      <div class="addproduct-edit-btn">
         <button class="addproduct-btn" type="submit">Submit</button><br>
      </div>
      
      
    </form>
     


    </div>
    

   </div>
  </section>
  {{!-- profile page end --}}


  
</main>


<script>
 document.getElementById('form').addEventListener('submit', function (event) {

    event.preventDefault();

 
    const errors = document.querySelectorAll('.error');
    errors.forEach(error => (error.textContent = ''));

    let isValid = true;


    const title = document.getElementById('title');
    const description = document.getElementById('description');
    const category = document.getElementById('Catogory');
    const price = document.getElementById('price');
    const offer = document.getElementById('offer');
    const rating = document.getElementById('rating');
    const review = document.getElementById('review');
    const stock = document.getElementById('stock');
    const size = document.getElementById('size');
    const material = document.getElementById('meterial');
    const mainImage = document.getElementById('image1');

    function setError(element, message) {
        const errorSpan = document.getElementById(`${element.id}_error`);
        errorSpan.textContent = message;
        isValid = false;
    }

    if (!title.value.trim()) {
        setError(title, 'Title is required.');
    }

    if (!description.value.trim()) {
        setError(description, 'Description is required.');
    }

    if (!category.value.trim()) {
        setError(category, 'Category is required.');
    }

    if (!price.value.trim() ) {
        setError(price, 'Price is required.');
    }

    if (!offer.value.trim() ) {
        setError(offer, 'Offer is required.');
    }

    if (!rating.value.trim() || parseFloat(rating.value) < 0 || parseFloat(rating.value) > 5) {
        setError(rating, 'Rating must be between 0 and 5 is required.');
    }

    if (!review.value.trim() ) {
        setError(review, 'Review is required..');
    }

    if (!stock.value.trim() ) {
        setError(stock, 'Stock is required.');
    }

    if (!size.value.trim()) {
        setError(size, 'Size is required.');
    }

    if (!material.value.trim()) {
        setError(material, 'Material is required.');
    }

    if (!mainImage.files[0]) {
        setError(mainImage, 'Main image is required.');
    }

    const subImages = document.getElementById('images');
    if (!subImages.files.length) {
        setError(subImages, 'At least one sub-image is required.');
    }

    if (isValid) {
        document.getElementById('form').submit();
    }
});

</script>


<script>
  document.addEventListener('DOMContentLoaded', () => {
    const image1Input = document.getElementById('image1');
    const fileName1 = document.getElementById('fileName1');
    const mainImagePreview = document.getElementById('mainImagePreview');
    const removeMainImageButton = document.getElementById('removeMainImage');

    
    image1Input.addEventListener('change', (event) => {
        const file = event.target.files[0];
        if (file) {
            fileName1.textContent = file.name;
            const reader = new FileReader();
            reader.onload = (e) => {
                mainImagePreview.src = e.target.result;
                mainImagePreview.style.display = 'block';
                removeMainImageButton.style.display = 'inline-block';
                removeMainImageButton.style.backgroundColor = 'red';
                removeMainImageButton.style.color = 'white';
                removeMainImageButtonn.style.border = 'none';
                removeMainImageButton.style.padding = '5px 10px';
                removeMainImageButton.style.cursor = 'pointer';
               
            };
            reader.readAsDataURL(file);
        } else {
            removeMainImage();
        }
    });

 
    removeMainImageButton.addEventListener('click', () => {
        removeMainImage();
    });


    function removeMainImage() {
        image1Input.value = '';
        fileName1.textContent = 'No file chosen'; 
        mainImagePreview.style.display = 'none';
        mainImagePreview.src = ''; 
        removeMainImageButton.style.display = 'none'; 
    }
});


    const imagesInput = document.getElementById('images');
    const fileNames = document.getElementById('fileNames');
    const previewContainer = document.getElementById('previewContainer');

    imagesInput.addEventListener('change', (event) => {
        const files = Array.from(event.target.files);
        fileNames.textContent = files.length > 0 ? `${files.length} file(s) chosen` : 'No files chosen';
        previewContainer.innerHTML = ''; 

        files.forEach((file, index) => {
            const reader = new FileReader();
            reader.onload = (e) => {
                const previewWrapper = document.createElement('div');
                previewWrapper.style.display = 'flex';
                previewWrapper.style.flexDirection = 'column';
                previewWrapper.style.alignItems = 'center';
                previewWrapper.style.position = 'relative';

                const img = document.createElement('img');
                img.src = e.target.result;
                img.style.width = '80px';
                img.style.height = '100px';
                img.style.objectFit = 'cover';

                const removeButton = document.createElement('button');
                removeButton.textContent = 'Remove';
                removeButton.style.marginTop = '5px';
                removeButton.style.backgroundColor = 'red';
                removeButton.style.color = 'white';
                removeButton.style.border = 'none';
                removeButton.style.padding = '5px 10px';
                removeButton.style.cursor = 'pointer';
                 removeButton.style.width = '80px';

                removeButton.addEventListener('click', () => {
                 
                    previewWrapper.remove();
                    const updatedFiles = Array.from(imagesInput.files).filter((_, i) => i !== index);
                    const dataTransfer = new DataTransfer();
                    updatedFiles.forEach((file) => dataTransfer.items.add(file));
                    imagesInput.files = dataTransfer.files;

                    fileNames.textContent = updatedFiles.length > 0 ? `${updatedFiles.length} file(s) chosen` : 'No files chosen';
                });

                previewWrapper.appendChild(img);
                previewWrapper.appendChild(removeButton);
                previewContainer.appendChild(previewWrapper);
            };
            reader.readAsDataURL(file);
        });
    });
</script>